/**
 * Chapter 2: オブジェクトの参照比較
 *
 * このファイルではJavaScriptにおけるオブジェクトの参照比較について示しています。
 * 状態管理ライブラリでは、状態の変更を検出するために参照の比較が使用されます。
 *
 * なぜ参照比較が重要なのか？
 * 状態管理ライブラリでは、パフォーマンスを最適化するために「変更があった部分だけ」を
 * 更新する必要があります。そのためには、オブジェクトが変更されたかどうかを
 * 効率的に判断する必要があります。
 *
 * JavaScriptでは、オブジェクトの内容を全て比較する「ディープ比較」は非常に
 * コストが高い処理です。特に大きな状態ツリーを持つアプリケーションでは、
 * 毎回すべての値を比較することは現実的ではありません。
 *
 * そこで、ReduxやNgRxでは「参照比較」（===演算子による比較）を使用します。
 * これは単なるメモリアドレスの比較なので、非常に高速です。この方法を活用するために、
 * 状態を更新する際には必ず新しいオブジェクト参照を返す必要があるのです。
 */

// 3つのオブジェクトを作成
const obj1 = { count: 0 };
const obj2 = obj1; // obj1と同じ参照を持つ
const obj3 = { count: 0 }; // 内容は同じだが、新しいオブジェクト（異なる参照）

// === 演算子は参照の同一性を比較します
console.log(obj1 === obj2); // true（同じメモリアドレスを指している）
console.log(obj1 === obj3); // false（異なるメモリアドレスを指している）

// 注意: ReduxやNgRxでは、状態が変更されたかどうかを判断するために
// このような参照の比較が行われます。新しい状態を作成する場合は、
// 必ず新しいオブジェクト（新しい参照）を返す必要があります。
